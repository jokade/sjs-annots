//     Project: sbt-sjs-annots
//      Module: plugin
// Description: Plugin for generating an JS file with contents from Scala annotations

// Copyright (c) 2016. Distributed under the MIT License (see included LICENSE file).
package sjsx.sbtplugin

import org.scalajs.sbtplugin.ScalaJSPlugin
import org.scalajs.sbtplugin.impl.DependencyBuilders
import sbt.Keys._
import sbt._

import scala.RuntimeException

object SJSXPlugin extends sbt.AutoPlugin {
  import SJSXPluginInternal._
  import ScalaJSPlugin.AutoImport.{fastOptJS, fullOptJS}

  override def requires = ScalaJSPlugin

  lazy val sjsxPreamble = settingKey[String]("Preamble for the JS annotation file")

  lazy val sjsxFile = settingKey[File]("Target file for JavaScript generated by sjsx")

  lazy val sjsxLoader = settingKey[SJSXLoader.Value]("Module loader used")

  lazy val sjsxSnippets = taskKey[Seq[SJSXSnippet]]("Additional JavaScript snippets written to the sjsx file")

  lazy val sjsxDeps = taskKey[Seq[SJSXDependency]]("Additional module dependencies")
//  lazy val sjsxAnnotsList = taskKey[Seq[Annot]]("List with all defined JS annotations")

  lazy val sjsxWriteFile = taskKey[Unit]("Writes the sjsx JavaScript file")

//  lazy val sjsxRequire = taskKey[String]("Name of the JavaScript module require function to be used")

  override def projectSettings = Seq(
//    sjsxRequire := "require",
    sjsxSnippets := Seq(),
    sjsxDeps := Seq(),
    sjsxLoader := SJSXLoader.None,
    sjsxPreamble := "",
    sjsxFile := (crossTarget in compile).value / s"${(moduleName in compile).value}-sjsx.js",
//    sjsxAnnotsList := discoverAnnotations((compile in Compile).value),
    sjsxWriteFile <<= (sjsxFile, (compile in Compile), streams, sjsxLoader, sjsxSnippets, sjsxDeps, sjsxPreamble) map writeAnnotations,
    libraryDependencies += DepBuilder.toScalaJSGroupID("de.surfice") %%% "sjsx" % Version.sjsxVersion,
    (fastOptJS in Compile) <<= (fastOptJS in Compile).dependsOn(sjsxWriteFile),
    (fullOptJS in Compile) <<= (fullOptJS in Compile).dependsOn(sjsxWriteFile)
//    scalacOptions += s"-Xmacro-settings:sjsx.require=${sjsxRequire.value}"
  )

  private object DepBuilder extends DependencyBuilders

  object SJSXLoader extends Enumeration {
    val None = Value
    val SystemJS = Value
  }

  case class SJSXSnippet(prio: Int, arg: String)

  case class SJSXDependency(global: String, id: String)
}
